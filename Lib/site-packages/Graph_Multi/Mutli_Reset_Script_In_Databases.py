import pickle
from paths import Dictionary_Database_Folder
import os

#print('########## ACTIVE BUILD IS ########################### -->',Active_Build_without_EXE)

def Remove_Script_From_Databases(SCRIPT_NAME_OR_INDEX,Target_Build):
        LIST_OF_REMOVED = []
        os.chdir(Dictionary_Database_Folder)
        for database_location_file in os.listdir(Dictionary_Database_Folder):
                if Target_Build in database_location_file:
                        print('Checking Database -> ',Target_Build,'  ',database_location_file)
                        with open(database_location_file, 'rb') as json_file:
                                List_Of_Dict = pickle.load(json_file)
                                #List_Of_Dict.append(Info_Dictionary)
                        for Dict in List_Of_Dict:
                                if type(SCRIPT_NAME_OR_INDEX) == str:
                                        SCRIPT_NAME = SCRIPT_NAME_OR_INDEX
                                        script_name = Dict['script_name'].split(':')[1]
                                        BUILD = Dict['build'].split(':')[1]
                                        if script_name == SCRIPT_NAME:
                                                print('#####################\n')
                                                print('Removing -> ',Target_Build,'  ',script_name)
                                                List_Of_Dict.remove(Dict)
                                                LIST_OF_REMOVED.append(SCRIPT_NAME)
                                                print('Removed -> ',Target_Build,'  ',script_name)
                                                print('#####################\n')
                                        else:
                                            #pass
                                            print('Not Removing -> ',Target_Build,'  ',script_name)
                                else:
                                        INDEX = SCRIPT_NAME_OR_INDEX
                                        index_from_dict = Dict['index_time']
                                        SCRIPT_NAME = Dict['script_name'].split(':')[1]
                                        if INDEX == index_from_dict:
                                                SCRIPT_NAME = SCRIPT_NAME + ' ' + str(INDEX)
                                                print('#####################\n')
                                                print('Wile Remove -> ',Target_Build,'  ',SCRIPT_NAME)
                                                List_Of_Dict.remove(Dict)

                                                LIST_OF_REMOVED.append(SCRIPT_NAME)
                                                print('Removed -> ',Target_Build,'  ',SCRIPT_NAME)
                                                print('#####################\n')
                                                break
                                        else:
                                            #pass
                                            print('Not Removing -> ',Target_Build,'  ',SCRIPT_NAME)


                        with open(database_location_file, 'wb') as json_file:
                                pickle.dump(List_Of_Dict, json_file)
                else:
                        print('Skipping Database -> ',database_location_file," It is not -> ",Target_Build)
        if LIST_OF_REMOVED != []:
                for i in LIST_OF_REMOVED:
                        print('#################')
                        print('REMOVED -> ',i)
                        print('#################')
        else:
                print('#################')
                print('NOTHING REMOVED')
                print('#################')



def Mark_at_looked_at(INDEX):
        os.chdir(Dictionary_Database_Folder)
        for database_location_file in os.listdir(Dictionary_Database_Folder):
                if Target_Build in database_location_file:
                        print('Checking Database -> ',Target_Build,'  ',database_location_file)
                        with open(database_location_file, 'rb') as json_file:
                                List_Of_Dict = pickle.load(json_file)
                                #List_Of_Dict.append(Info_Dictionary)
                        for Dict in List_Of_Dict:
                                index_from_dict = Dict['index_time']
                                SCRIPT_NAME = Dict['script_name'].split(':')[1]
                                if INDEX == index_from_dict:
                                        #List_Of_Dict.remove(Dict)
                                        print('Found -> ',INDEX)
                                        Dict['looked_at'] = 'looked_at:True'
                                        #List_Of_Dict.append(Dict)

                                        break
                        with open(database_location_file, 'wb') as json_file:
                                pickle.dump(List_Of_Dict, json_file)




def Mark_at_looked_Script_Fails(Script_Name,Target_Build):
        Target_Build_Under_Score = Target_Build.replace('.','_')
        os.chdir(Dictionary_Database_Folder)
        for database_location_file in os.listdir(Dictionary_Database_Folder):
                if Target_Build_Under_Score in database_location_file:
                        print('Checking Database -> ',Target_Build,'  ',database_location_file)
                        with open(database_location_file, 'rb') as json_file:
                                List_Of_Dict = pickle.load(json_file)
                                #List_Of_Dict.append(Info_Dictionary)
                        for Dict in List_Of_Dict:
                                index_from_dict = Dict['index_time']
                                SCRIPT_NAME = Dict['script_name'].split(':')[1]
                                BUILD = Dict['controller_build'].split(':')[1]
                                if Script_Name == SCRIPT_NAME and BUILD == Target_Build:
                                        if Dict['fail'] == 'fail:True':
                                                print('Found -> ', SCRIPT_NAME)
                                                Dict['looked_at'] = 'looked_at:True'

                                        #break
                        with open(database_location_file, 'wb') as json_file:
                                pickle.dump(List_Of_Dict, json_file)







if __name__ == "__main__":
        for i in range(5):
                #SCRIPT_NAME_Or_INDEX = 1591298546.8346283
                #SCRIPT_NAME_Or_INDEX = 1592414348.3411667
                #Mark_at_looked_at(1593214741.3427675)
                #for i in range(10):
                #        Remove_Script_From_Databases('00100,PC,Configurator,Media,Zone Controller,ELAN EL-IPD Single Chassis,adds ip-amp standalone and tests it,0')
                Mark_at_looked_Script_Fails("05600,PC,Configurator,Interface,Page,Check,Checks interface tab for changes,0",Target_Build = '8.5.18.0')
                #Mark_at_looked_Script_Fails("01600,ITP8,Viewer,Video,Video Cameras,All Video Cameras,Verifies all cameras have working stream,0",Target_Build = '8.5.18.0')
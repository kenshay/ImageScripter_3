from yattag import Doc
from yattag import indent
import random
import os
from paramiko import SSHClient
import paramiko
import time
import traceback
from scp import SCPClient
from Database_Manager.Dictionary_Database_Manager import Dictionary_Database_Manager_Class
from paths import MAX_CUTOFF,Dictionary_Database_Location,Ignore_Graph_Script_List, All_Scripts_Folder_Location, Active_Build, Graph_Folder_Location, \
    Active_Build_without_EXE





Branches = ['8.5','8.4']




def Create_Index_Page():
    Dictionary_Database_Manager = Dictionary_Database_Manager_Class(Dictionary_Database_Location)
    Stations_List = Dictionary_Database_Manager.get_all_station_names()
    doc, tag, text = Doc().tagtext()
    doc.asis('<!DOCTYPE HTML>')
    with tag('html', lang=" en"):
        with tag('head'):
            doc.asis('<!-- basic.html -->')
            doc.asis('<meta http-equiv="refresh" content="999">')
            with tag('title'):
                text('basic.html')
            doc.asis('<meta charset = "UTF-8" />')
            with tag('style'):
                doc.asis('div {'
                         'display:inline-block;'
                         'float:left;'
                         'text-align: center;'
                         'list-style-type:none;'
                         'padding-left: 10%;'
                         'padding-right: 10%;'
                         '}'
    
                         'ul {'
                         'list-style-type:none;'
                         'text-align: center;'
                         '}'
                         )

            #doc.asis('<link rel="stylesheet" href="style.css">')
        with tag('body'):
            for BRANCH in Branches:
                for station_name in Stations_List:
                    Last_Five_Build = Dictionary_Database_Manager.get_last_Amount_of_builds(BRANCH)
                    with tag('div'):
                        with tag('h4'):
                            text(station_name + ' (' + BRANCH + ')')
                        with tag('ul'):
                            for build in Last_Five_Build:
                                with tag('li'):
                                    underscore_build = build.replace('.','_')
                                    graph_name = station_name + '__' + underscore_build
                                    #IP = "172.105.150.15"
                                    IP = '127.0.0.1'
                                    link = "http://{}/Graphs/{}.php".format(IP,graph_name)
                                    doc.asis('<a href="{}">{}</a>'.format(link,build))

    result = indent(doc.getvalue())
    place = r"C:\xampp\htdocs\index.php"
    with open(place, 'w+') as f:
        f.write(result)
Cut_Off = True







Create_Index_Page()





input('STOP HERE')

















Dictionary_Database_Manager = Dictionary_Database_Manager_Class(Dictionary_Database_Location,BUILD_VAR='8_5_17_0')
#Last_Five_Builds = Dictionary_Database_Manager.get_last_5_builds()
Last_Five_Builds = Dictionary_Database_Manager.get_all_builds()
print('#### ######## ######### ##### ####')
print(Last_Five_Builds)
print('##### ######## ###### #######')
Stations_List = Dictionary_Database_Manager.get_all_station_names()

for Station_Name in Stations_List:
    for BUILD in Last_Five_Builds:
        Underscore_Build = BUILD.replace('.', '_')
        Dictionary_Database_Manager = Dictionary_Database_Manager_Class(Dictionary_Database_Location,BUILD_VAR=Underscore_Build)
        All_get_missing_scripts_from_current_build = Dictionary_Database_Manager.get_missing_scripts_from_current_build()
        print(All_get_missing_scripts_from_current_build)
        doc, tag, text = Doc().tagtext()
        doc.asis('<!DOCTYPE HTML>')
        with tag('html', lang=" en"):
            with tag('head'):
                doc.asis('<!-- basic.html -->')
                doc.asis('<meta http-equiv="refresh" content="999">')
                with tag('title'):
                    text('basic.html')
                doc.asis('<meta charset = "UTF-8" />')
                doc.asis('<link rel="stylesheet" href="../style.css">')
            with tag('body'):
                with tag('div', id="top_div"):
                    with tag('h2', id="last_update_date"):
                        from datetime import datetime
                        now = datetime.now()
                        datest = now.strftime('%I:%M:%S   %Y/%m/%d')
                        text("Updated " + datest)
                #if Cut_Off == None:
                #    with tag('h2'):
                #        with tag('a', id="build",href="http://172.105.150.15"):
                #            text("Short Version")
                #else:
                #with tag('h2'):
                #    with tag('a', id="build",href="http://172.105.150.15/long_graph.php"):
                #        text("Long Version")

                    with tag('h2', id="last_update_date"):
                         text(Station_Name)

                    with tag('h2', id="last_update_date"):
                         astring = 'Build = $'
                         astring = astring.replace('$',BUILD)
                         text(astring)
                    with tag('h2', id="last_update_date"):
                        with tag('a', id="build", href="http://172.105.150.15/script_log.php"):
                            text("Log")
            with tag('div'):
                List_of_scripts_dicts = []
                Max_Length_List = []
                scripts_list = Dictionary_Database_Manager.get_all_scripts_from_station_by_folder(Station_Name)
                for script_name_and_real_script_name in reversed(scripts_list):
                    List_of_both = script_name_and_real_script_name.split('|||')
                    script_name = List_of_both[0]
                    print('#', script_name)
                    real_script_name = List_of_both[1]
                    print('##', real_script_name)
                    if real_script_name not in Ignore_Graph_Script_List:
                        if Cut_Off == None:
                            Pass_Fail_List_of_entries_for_script = Dictionary_Database_Manager.get_order_of_happened_scripts_passes_and_fails(
                                Station_Name, real_script_name)

                        else:
                            Pass_Fail_List_of_entries_for_script = Dictionary_Database_Manager.get_order_of_happened_scripts_passes_and_fails(
                                Station_Name, real_script_name)[Cut_Off:]
                        Max_Length_List.append(len(Pass_Fail_List_of_entries_for_script))
                        script_dict = {}
                        script_dict['name'] = script_name
                        List = []
                        for entry in reversed(Pass_Fail_List_of_entries_for_script):
                            Result_Dict = {}
                            Result_Dict['pass'] = entry['pass'].split(':')[1]
                            fail_Video_Name = entry['fail_video'].split(':')[1]
                            fail_Video_Name = os.path.basename(fail_Video_Name)
                            fail_Video_Name_without_avi = fail_Video_Name.rstrip('.avi')
                            pass_Video_Name = entry['pass_video'].split(':')[1]
                            pass_Video_Name = os.path.basename(pass_Video_Name)
                            pass_Video_Name_without_avi = pass_Video_Name.rstrip('.avi')
                            Result_Dict['fail_Video_Name_without_avi'] = fail_Video_Name_without_avi
                            Result_Dict['pass_Video_Name_without_avi'] = pass_Video_Name_without_avi
                            Result_Dict['index_time'] = entry['index_time']
                            #############################################
                            Result_Dict['entry'] = entry
                            #################################
                            List.append(Result_Dict)
                    script_dict['results'] = List
                    List_of_scripts_dicts.append(script_dict)
                ###
                ####
                if Cut_Off == None:
                    Amount_Of_Runs_Total = max(Max_Length_List)
                else:
                    Amount_Of_Runs_Total = int(str(MAX_CUTOFF).replace('-', ''))
                with tag('table', id="title_table"):
                    with tag('tr'):
                        with tag('td', id="title_table_td"):
                            text(Station_Name)
                with tag('table', cellspacing="0", cellpadding="0"):
                    ###################################################################################
                    with tag('tr'):

                        for interger in reversed(range(Amount_Of_Runs_Total)):
                            interger += 1
                            with tag('td', id="td_script_number"):
                                pass
                        for script_dict in List_of_scripts_dicts:
                            name = script_dict['name']
                            Result_Dict_List = script_dict['results']
                            with tag('tr'):
                                for desc in name.split('/'):
                                    if '^0^' not in desc:
                                        with tag('td', id="td_script_name"):
                                            text(desc)
                                    else:
                                        with tag('td', id="td_script_name"):
                                            doc.asis('&nbsp;')
                                    with tag('td', id="td_script_name"):
                                        for i in range(3):
                                            doc.asis('&nbsp;')
                                if len(Result_Dict_List) > Amount_Of_Runs_Total:
                                    for blank in range(Amount_Of_Runs_Total - len(Result_Dict_List)):
                                        with tag('td', id='tdnotrun'):
                                            pass
                                    for Result_Dict in Result_Dict_List:
                                        entry = Result_Dict['entry']
                                        pass_or_fail = Result_Dict['pass']
                                        index_time = Result_Dict['index_time']
                                        try:
                                            looked_at = Result_Dict['entry']['looked_at'].split(':')[1]
                                            if looked_at == 'True':
                                                looked_at = True
                                            else:
                                                looked_at = False
                                        except:
                                            looked_at = False
                                        if pass_or_fail == 'True':
                                            pass_or_fail = 'tdpass'
                                        else:
                                            pass_or_fail = 'tdfail'
                                        if looked_at == True:
                                            pass_or_fail = 'tdlookedat'

                                        fail_Video_Name_without_avi = Result_Dict['fail_Video_Name_without_avi']
                                        if fail_Video_Name_without_avi != 'None':
                                            # linkwhole = "location.href='http://172.105.150.15/fails/" + fail_Video_Name_without_avi + "/fail.php'"
                                            simple_link = 'http://172.105.150.15/Entries/' + str(
                                                index_time) + '/result.php'
                                            linkwhole = "location.href='http://172.105.150.15/Entries/" + str(
                                                index_time) + "/result.php'"
                                            # print(linkwhole)
                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                the_text = entry['date'].replace('date:', '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = entry['script_start_time'].replace('script_start_time:',
                                                                                              '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = '<a href="$$">Info</a>'
                                                the_text = the_text.replace('$$', simple_link)
                                                doc.asis(the_text)
                                        else:
                                            index_time = Result_Dict['index_time']
                                            pass_Video_Name_without_avi = Result_Dict['pass_Video_Name_without_avi']
                                            simple_link = 'http://172.105.150.15/Entries/' + str(
                                                index_time) + '/result.php'
                                            linkwhole = "location.href='http://172.105.150.15/Entries/" + str(
                                                index_time) + "/result.php'"

                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                the_text = entry['date'].replace('date:', '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = entry['script_start_time'].replace('script_start_time:',
                                                                                              '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = '<a href="$$">Info</a>'
                                                the_text = the_text.replace('$$', simple_link)
                                                doc.asis(the_text)
                                else:
                                    for Result_Dict in Result_Dict_List:
                                        entry = Result_Dict['entry']
                                        pass_or_fail = Result_Dict['pass']
                                        index_time = Result_Dict['index_time']
                                        try:
                                            looked_at = Result_Dict['entry']['looked_at'].split(':')[1]
                                            if looked_at == 'True':
                                                looked_at = True
                                            else:
                                                looked_at = False
                                        except:
                                            looked_at = False
                                        if pass_or_fail == 'True':
                                            pass_or_fail = 'tdpass'
                                        else:
                                            pass_or_fail = 'tdfail'
                                        if looked_at == True:
                                            pass_or_fail = 'tdlookedat'

                                        fail_Video_Name_without_avi = Result_Dict['fail_Video_Name_without_avi']
                                        if fail_Video_Name_without_avi != 'None':
                                            # linkwhole = "location.href='http://172.105.150.15/fails/" + fail_Video_Name_without_avi + "/fail.php'"
                                            simple_link = 'http://172.105.150.15/Entries/' + str(
                                                index_time) + '/result.php'
                                            linkwhole = "location.href='http://172.105.150.15/Entries/" + str(
                                                index_time) + "/result.php'"
                                            # print(linkwhole)
                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                the_text = entry['date'].replace('date:', '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = entry['script_start_time'].replace('script_start_time:',
                                                                                              '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = '<a href="$$">Info</a>'
                                                the_text = the_text.replace('$$', simple_link)
                                                doc.asis(the_text)
                                        else:
                                            index_time = Result_Dict['index_time']
                                            pass_Video_Name_without_avi = Result_Dict['pass_Video_Name_without_avi']
                                            simple_link = 'http://172.105.150.15/Entries/' + str(
                                                index_time) + '/result.php'
                                            linkwhole = "location.href='http://172.105.150.15/Entries/" + str(
                                                index_time) + "/result.php'"
                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                the_text = entry['date'].replace('date:', '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = entry['script_start_time'].replace('script_start_time:',
                                                                                              '')
                                                text(the_text)
                                                doc.asis('<br>')
                                                the_text = '<a href="$$">Info</a>'
                                                the_text = the_text.replace('$$', simple_link)
                                                doc.asis(the_text)
                                    for blank in range(Amount_Of_Runs_Total - len(Result_Dict_List)):
                                        with tag('td', id='tdnotrun'):
                                            pass
                        with tag('tr'):
                            for i in range(8):
                                with tag('td', id="td_script_name"):
                                    pass
                            for interger in reversed(range(Amount_Of_Runs_Total)):
                                interger += 1
                                with tag('td', id="td_script_number"):
                                    # text(str(interger))
                                    pass
            with tag('div'):
                with tag('h1', id="missing"):
                    doc.asis('<br>')
                    text('MISSING SCRIPTS')
                    doc.asis('<br>')

                for missing in All_get_missing_scripts_from_current_build:
                    with tag('p'):
                        doc.asis('<br>')
                        text(missing)
                        doc.asis('<br>')
        result = indent(doc.getvalue())
        graph_name = Station_Name + '__' + Underscore_Build
        path = r"C:\xampp\htdocs\Graphs\{}.php".format(graph_name)
        with open(path,'w+') as f:
            f.write(result)




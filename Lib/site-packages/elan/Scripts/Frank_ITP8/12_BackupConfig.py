##########This is for counter#
import os
from elan import * 
import time
from elan.ElanSettings import backup_counter_Folder


os.chdir(backup_counter_Folder)
filea = "backup_counter.txt"



if os.path.exists(filea):
     print('yes')
     f = file(filea, "r+")
     config_counter = int(f.read())
     print(config_counter)
     f.close()
else:
    print('no')
    f = file(filea, "w+")
    f.write('0')
    config_counter = 0
    print(config_counter)
    f.close()

#if True:
if config_counter >= 30:
    Say("Going to Backup Controller Configuration")

    ##################################RESET TO 0
    f = file(filea, "w")
    f.write('0')
    print(config_counter)
    f.close()
    ###############################################
    Say("Going to Backup Controller Configuration")
    now = str(time.strftime("%c"))
    now = "Date_" + now
    now = now.replace(':','-')
    now = now.replace(' ','__Time_')
    now = now.replace('/','-')
    now = now + ".EBK"
    
    Path = "C:\\ELAN_Backups\\" + now
    #Path = "\\\\192.168.0.163\Public\Controller Backups\\" + now
    Configurator.Start()
    Configurator.basicinformation.RightClickTypeThenPress('b','enter')
    HlConfig.Wait()
    sleep(2)
    HlConfig.PushButton.Click('Yes')
    SaveAs.Type(Path)
    SaveAs.Press('enter')
    sleep(2)
    if ConfirmSaveAs.doyouwanttoreplaceit.Exists():
        ConfirmSaveAs.PushButton.Click('Yes')
    else:
        pass
    
    Backup.Wait()
    Backup.readytostart.Wait()
    sleep(10)
    Backup.PushButton.Click('Start')
    
    Backup.backupsuccessful.Wait()
    sleep(2)
    Backup.PushButton.Click('Done')
    Backup.backupsuccessful.WaitVanish()
    sleep(3)
    Configurator.CloseAndClean()
    Say("Completed Backup of Configuration")

else:
    Say("Skipping Backup Controller")
    print(config_counter)
    config_counter += 1
    f = file(filea, "w")
    f.write(str(config_counter))
    print(config_counter)
    f.close()

import osfrom elan import * import timeimport osfrom datetime import datetime, timedef is_time_between(begin_time, end_time, check_time=None):    # If check time is not given, default to current UTC time    check_time = check_time or datetime.utcnow().time()    if begin_time < end_time:        return check_time >= begin_time and check_time <= end_time    else: # crosses midnight        return check_time >= begin_time or check_time <= end_time# Test case when range crosses midnighttime_to_run = is_time_between(time(22,0), time(4,00))#time_to_run = Trueif time_to_run == True:        Errorr = 'asd'        #Configurator.Start()        Say("Going to Fully Backup Controller Configuration")        Passs = False        for i in range(10):                try:                        now = datetime.now()                        now = str(now.strftime("%c"))                        Passs = True                        break                except Exception as e:                        Errorr = str(e)                        #time.sleep(1)                        print(e)        if Passs == False:                raise  ValueError(Errorr)        now = "Date_" + now        now = now.replace(':','-')        now = now.replace(' ','__Time_')        now = now.replace('/','-')        now = now + ".EVBK"        ElanBackupsPath = "C:\\ELAN_Backups\\"        if not os.path.exists(ElanBackupsPath):                os.makedirs(ElanBackupsPath)        Path = ElanBackupsPath + now        print(Path)        #Path = "\\\\192.168.0.163\Public\Controller Backups\\" + now        #Configurator.Start()        Configurator.basicinformation.RightClickTypeThenPress('bb','enter')        HlConfig.Wait()        sleep(2)        HlConfig.PushButton.Click('Yes')        Sleep(10)        SaveAs.Type(Path)        Sleep(10)        SaveAs.Press('enter')        Sleep(10)        if ConfirmSaveAs.doyouwanttoreplaceit.Exists():            ConfirmSaveAs.PushButton.Click('Yes')            ConfirmSaveAs.Press('enter')        else:            pass            Sleep(10)        HlConfig.Wait()        Sleep(10)        HlConfig.PushButton.Click('Yes')        Sleep(2)        HlConfig.Press('enter')        Sleep(10)        for i in range(3):                try:                    Sleep(1)                    Press('enter')                except Exception as e:                        print(e)        Backup.Wait()        Backup.readytostart.Wait(seconds=5000)        Sleep(14)        Backup.start.RealClick()        Backup.backupsuccessful.Wait(seconds=5000)        Sleep(2)        Backup.PushButton.Click('Done')        Backup.backupsuccessful.WaitVanish()        sleep(3)        Configurator.CloseAndClean()        Say("Completed Backup of Configuration")Close_Image_Show()
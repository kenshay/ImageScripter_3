#from ImageScripter import *
from elan import *
#from pytank.Core.SystemFunctions import Say
from elan import *
#DONE
#Viewer.bluescreenlarge2.SetThreshold(.7283)
def Check_If_Blue_Screen_Exists():
    try:
        sleep(10)
        Blue = '[254   0   0]'
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Blue = '[255   0   0]'
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Blue = '[253   0   0]'    
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Say('Blue Screen Does not exist')
    except:
        sleep(40)
        Blue = '[254   0   0]'
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Blue = '[255   0   0]'
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Blue = '[253   0   0]'    
        if Viewer.bluescreen.GetDominantColor(threshold=.70) == Blue:
            raise ValueError('Blue Screen')
        Say('Blue Screen Does not exist')
        
def Check_If_Connecting_Exists():
    try:
        if Viewer.connectingtocamerapleasewait.Exists() == True:
            sleep(3)
            if Viewer.connectingtocamerapleasewait.Exists() == True:
                sleep(3)
                if Viewer.connectingtocamerapleasewait.Exists() == True:
                    sleep(3)
                    raise ValueError('No video showing')           
        else:
            Say("Video Looks good")
        if Viewer.blockytext.Exists() == True:
            raise ValueError('Blocky Text is happening')    
        if Viewer.blackimage.Exists() == True:
            raise ValueError('No video showing') 
    except Exception as e:
        print(e)
        sleep(40)
        if Viewer.connectingtocamerapleasewait.Exists() == True:
            sleep(3)
            if Viewer.connectingtocamerapleasewait.Exists() == True:
                sleep(3)
                if Viewer.connectingtocamerapleasewait.Exists() == True:
                    sleep(3)
                    raise ValueError('No video showing')           
        else:
            Say("Video Looks good")
        if Viewer.blockytext.Exists() == True:
            raise ValueError('Blocky Text is happening')    
        if Viewer.blackimage.Exists() == True:
            raise ValueError('No video showing') 
    
    
    
#Check_If_Connecting_Exists()    
Start_Image_Show()


Viewer.Start(quick = True)
GetBackTOHomeScreenPC()
Viewer.video10items.Click()  
##################################SCROLL TO TOP
Sleep(3)
Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)
Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)
Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)
Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)
#################################################################
Sleep(3)

Viewer.videocameras.Click(xoffset = -200,yoffset = 100,threshold = .90,wait=False)

#Viewer.ip8.Wait(threshold = .90) 
Viewer.tp12topmiddle.Wait(threshold = .90,wait=False)


for i in range(14):
    print(i)
    try:
        Check_If_Connecting_Exists()
        #Check_If_Blue_Screen_Exists()
    except:
        sleep(30)
        Check_If_Connecting_Exists()
        #Check_If_Blue_Screen_Exists()
    Viewer.gonextarrow.Click()
    sleep(5)

Viewer.nonext.Wait()


Check_If_Connecting_Exists()
#Check_If_Blue_Screen_Exists()

Viewer.shudder.Click()

Viewer.videohighlighted2.Click()
Viewer.CloseAndClean()

Say("Finished Checking the Video Camera's")
Close_Image_Show()
from elan import *import osimport numpy as npimport cv2import osoneminute = r"C:\Settings\oneminute.avi"thirtyseconds = r"C:\Settings\thirtyseconds.avi"threeminutes = r"C:\Settings\threeminutes.avi"twominutes = r"C:\Settings\twominutes.avi"List_of_Videos = [oneminute, thirtyseconds, threeminutes, twominutes]for i in List_of_Videos:	try:		os.remove(i)	except Exception as e:		print(e)	#with open(i,'w') as f:	#	f.write('')Viewer.Start(quick = True)GetBackTOHomeScreenPC()Viewer.video10items.Click()Sleep(5)##################################SCROLL TO TOPViewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)Viewer.videocameras.Click(xoffset = 420,yoffset = 70,threshold = .90,wait = False)#################################################################Viewer.videocameras.Click(xoffset = -200,yoffset = 100,threshold = .90,wait=False)Viewer.tp12topmiddle.Wait(threshold = .90,wait=False)for i in range(100):	if Viewer.dvrisavailable.Exists(wait = False) == False:	    Viewer.gonextarrow.Click(wait = False)	    sleep(5)	else:	    Viewer.dvrisavailable.Click()	    breakSleep(15)Viewer.shuddar.Click(yoffset = 470,wait = False)Sleep(4)Viewer.saveclip.Click()Viewer.thirtyseconds.Wait()Viewer.thirtyseconds.Click()Sleep(5)SaveAs.Edit.SetText(0,thirtyseconds)Sleep(5)SaveAs.PushButton.Click('Save')SaveAs.Press('enter')Sleep(5)#try:#	ConfirmSaveAs.PushButton.Click('Yes')#except:#	SaveAs.PushButton.Click('Save')#	Sleep(5)#	ConfirmSaveAs.PushButton.Click('Yes')Sleep(5)Viewer.saveclip.Click()Viewer.onemin.Wait()Viewer.onemin.Click()Sleep(5)SaveAs.Edit.SetText(0,oneminute)Sleep(5)SaveAs.PushButton.Click('Save')SaveAs.Press('enter')Sleep(5)#try:#	ConfirmSaveAs.PushButton.Click('Yes')#except:#	SaveAs.PushButton.Click('Save')#	Sleep(5)#	ConfirmSaveAs.PushButton.Click('Yes')Sleep(5)Viewer.saveclip.Click()try:    Viewer.twomin.Wait(seconds = 20)except:    Viewer.saveclip.Click()    Viewer.twomin.Wait()Viewer.twomin.Click()Sleep(5)SaveAs.Edit.SetText(0,twominutes)Sleep(5)SaveAs.PushButton.Click('Save')SaveAs.Press('enter')Sleep(5)#try:#	ConfirmSaveAs.PushButton.Click('Yes')#except:#	SaveAs.PushButton.Click('Save')#	Sleep(5)#	ConfirmSaveAs.PushButton.Click('Yes')Sleep(5)Viewer.saveclip.Click()try:    Viewer.threemin.Wait()except:    Sleep(30)    Viewer.saveclip.Click()    Viewer.threemin.Wait()Viewer.threemin.Click()Sleep(5)SaveAs.Edit.SetText(0,threeminutes)Sleep(5)SaveAs.PushButton.Click('Save')SaveAs.Press('enter')Sleep(5)#try:#	ConfirmSaveAs.PushButton.Click('Yes')#except:#	SaveAs.PushButton.Click('Save')#	Sleep(5)#	ConfirmSaveAs.PushButton.Click('Yes')Sleep(10)Viewer.shuddar.Click(wait = False)Sleep(10)try:    Viewer.video10itemshighlighted22.Click(wait = False)except:    Viewer.shuddar.Click(wait=False)    Sleep(20)    Viewer.video10itemshighlighted22.Click(wait=False)Sleep(3)try:	Viewer.settingswheel.Wait(seconds = 20)except:	Sleep(3)	Viewer.video10itemshighlighted22.Click(wait = False)	Viewer.settingswheel.Wait(seconds = 20)Viewer.CloseAndClean()List_Of_Bad_Videos = []for Video in List_of_Videos:    try:        cap = cv2.VideoCapture(Video)        while (cap.isOpened()):            ret, frame = cap.read()            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)            cv2.imshow('frame', gray)            # if cv2.waitKey(1) & 0xFF == ord('q'):            break        cap.release()        cv2.destroyAllWindows()        print('Good Video -> ', Video)    except:        print('Bad Video -> ', Video)        List_Of_Bad_Videos.append(Video)if List_Of_Bad_Videos != []:    String = 'Bad Videos From DVR \n'    for i in List_Of_Bad_Videos:        String = String + i + "\n"    raise ValueError(String)
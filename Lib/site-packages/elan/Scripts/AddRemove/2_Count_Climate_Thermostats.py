
from elan.functions import Get_Device_List_Simple,Diff
from elan import *

#DONE

#Past_List = ['Aprilaire 8800 Thermostat', 'Aprilaire 8820 WiFi Thermostat', 'Aprilaire 8870 Thermostat', 'Carrier CZII Thermostat', 'Carrier Infinity Thermostat', 'ELAN WiFi Thermostat', 'HAI Omni Series Thermostat', 'Heatmiser Thermostat', 'KNX Thermostat', 'LifeSense LT1002 Thermostat', 'Lutron QS Thermostat', 'RCS TR16 Thermostat', 'RCS TR40,TR60 Thermostat', 'Tekmar Thermostat', 'Vantage Thermostat (InFusion)', 'Vantage Thermostat (QLink)', 'Virtual HVAC Thermostat', 'Z-Wave Thermostat 2GIG Z-Stat', 'Z-Wave Thermostat Honeywell YTH8320ZW1007/U', 'Z-Wave Thermostat RCS TZ45', 'Z-Wave Thermostat Trane TZEMT400BB3']
Past_List = ['Aprilaire 8800 Thermostat', 'ELAN', 'Aprilaire 8820 WiFi Thermostat', 'ELAN', 'Aprilaire 8870 Thermostat', 'ELAN', 'Carrier CZII Thermostat', 'ELAN', 'Carrier Infinity Thermostat', 'ELAN', 'ELAN WiFi Thermostat', 'ELAN', 'HAI Omni Series Thermostat', 'ELAN', 'Heatmiser Thermostat', 'ELAN', 'KNX Thermostat', 'ELAN', 'LifeSense LT1002 Thermostat', 'ELAN', 'Lutron QS Thermostat', 'ELAN', 'RCS TR16 Thermostat', 'ELAN', 'RCS TR40,TR60 Thermostat', 'ELAN', 'Tekmar Thermostat', 'ELAN', 'Vantage Thermostat (InFusion)', 'ELAN', 'Vantage Thermostat (QLink)', 'ELAN', 'Virtual HVAC Thermostat', 'ELAN', 'Z-Wave Thermostat 2GIG Z-Stat', 'ELAN', 'Z-Wave Thermostat Honeywell YTH8320ZW1007/U', 'ELAN', 'Z-Wave Thermostat RCS TZ45', 'ELAN', 'Z-Wave Thermostat Trane TZEMT400BB3', 'ELAN']


One = Configurator.climate
Two = Configurator.thermostats

Current_List = Get_Device_List_Simple(One,Two,index=1)


Configurator.system.Click()

if Current_List != Past_List:
    Difference = Diff(Past_List,Current_List)
    error = 'List Changed\n' + str(Difference)
    raise ValueError(error)














'''
from ImageScripter import *
from elan.functions import Get_Device_Count
from elan import *

One = Configurator.climate
Two = Configurator.thermostats
count = 21

newcount = Get_Device_Count_Simple(One,Two)
print("New Count is " + str(newcount))
if count != newcount:
    Say('Count for ' + Two.DisplayName + " is off")
    raise ValueError('Exception 11 -> Count for ' + Two.DisplayName + " is off, raising error")
else:
    Say("The new count matches the old count. The test has passed")
Configurator.system.Click()
'''

from ImageScripter import *
from elan.functions import Get_Device_List_Simple,Diff
from elan import *

Past_List = ['CentraLite Elegance (single MCP)', 'CentraLite JetStream', 'Clipsal Lighting', 'Dynalite Bridge', 'Electronic Solutions R2D7', 'HAI Lighting Controller', 'HDL Bus Pro Lighting', 'iLight Source Controller', 'Leviton Z-Wave RS232 Controller', 'Lutron Caseta Lighting', 'Lutron HomeWorks GraphikEye', 'Lutron HomeWorks Illumination (Ethernet)', 'Lutron HomeWorks Illumination (RS-232)', 'Lutron HomeWorks Interactive', 'Lutron HomeWorks QS', 'Lutron RA2 Select Lighting', 'Lutron RadioRA', 'Lutron RadioRA2 QS', 'Luxom Lighting Controller', 'PCS PGW', 'PCS PIM Serial', 'PCS PIM-IP', 'Philips Hue Bridge', 'Rako Bridge (RA/RTC/WA/WTC-Bridge)', 'Smart-BUS Lighting', 'Somfy MyLink', 'Somfy RS232 Universal RTS Interface II', 'Somfy RS485 Universal RTS Interface II', 'Somfy UAI Plus', 'Tapko SIM-KNX', 'Vantage InFusion Controller', 'Vantage Q-Series Controller', 'Virtual Lighting Device Controller']

One = Configurator.lighting
Two = Configurator.lightinginterfaces

Current_List = Get_Device_List_Simple(One,Two)

Configurator.system.Click()

if Current_List != Past_List:
    Difference = Diff(Past_List,Current_List)
    error = 'List Changed\n' + str(Difference)
    raise ValueError(error)












'''
from ImageScripter import *
from elan.functions import Get_Device_Count
from elan import *

One = Configurator.lighting
Two = Configurator.lightinginterfaces
count = 33

newcount = Get_Device_Count_Simple(One,Two)
print("New Count is " + str(newcount))
if count != newcount:
    Say('Count for ' + Two.DisplayName + " is off")
    raise ValueError('Exception 11 -> Count for ' + Two.DisplayName + " is off, raising error")
else:
    Say("The new count matches the old count. The test has passed")
Configurator.system.Click()
'''
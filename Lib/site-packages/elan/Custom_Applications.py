from imagescripter.core.pc import PC_Class
from imagescripter.core.automation_functions import Sleep
from elan import *
import os
from urllib.request import urlopen



#Controller_Name = 'g1 F8-57-2E-00-22-C7'
Controller_Name = 'SC F8-57-2E-00-01-9D'
Password = 'shayshay'
#IP = '192.168.0.109'
IP = '192.168.0.103'


ElanConnectProExe = r"C:\ImageScripter_2\Lib\site-packages\elan\exe\ecp.exe"


class Configurator_Class(PC_Class):
    def CloseAndClean(self):
        from elan import ElanHomeSystemsConnect
        Sleep(2)
        from elan import ElanConnectPro
        self.Close()
        ElanConnectPro.Close()
        Sleep(5)
        try:
            ElanHomeSystemsConnect.Close()
        except Exception as e:
            print(e)


    def Start(self,name = Controller_Name,password = Password,waitseconds = 2,setuppassword = False):
        from elan import ElanConnectPro
        from elan import Viewer
        from elan import Elan_Connect_Pro
        from elan import Ecp
        if setuppassword == True:
            Viewer.Start()
            Viewer.CloseAndClean()
        else:
            pass
        os.startfile(ElanConnectProExe)
        # optionsopened.png
        #ElanConnectPro.options.Wait()
        ElanConnectPro.whitebox.WaitVanish()
        Sleep(1)
        if ElanConnectPro.optionsclosed.Exists():
            ElanConnectPro.PushButton.Click('Options')
        else:
            pass
        ElanConnectPro.Edit.SetText(0,name)
        ElanConnectPro.Edit.SetText(1,password)
        ElanConnectPro.PushButton.Click('Start Configurator')
        #self.media.Wait(amount = 10)
        try:
            self.media.Wait(seconds = waitseconds)
        except ValueError:
            #Sleep(1)
            #Elan_Connect_Pro.Close()
            Ecp.Close()
            ElanConnectPro.Edit.SetText(1,'')
            sleep(2)
            ElanConnectPro.PushButton.Click('Start Configurator')
            self.media.Wait(seconds = waitseconds * 5)

    def waitForControllerToComeBackOnline(self):
        from elan import ElanConnectPro
        ElanConnectPro.waitForControllerToComeBackOnline()

    def WaitForControllerToComeBackOnline(self):
        from elan import ElanConnectPro
        ElanConnectPro.waitForControllerToComeBackOnline()




    def RestartHard(self,wait = 10):
        print("Hard Restart")
        from elan import Configurator as C
        from elan import Open as O
        from elan import HlConfig
        from elan import ElanConnectPro as ECP
        C.basicinformation.RightClick()
        try:
            C.reboottargetsystemhardware.Click()
        except:
            C.reboottargetsystemhardware.Wait()
            Sleep(1)
            C.reboottargetsystemhardware.Click()
        HlConfig.PushButton.Click('Yes')
        ECP.CloseAndClean()
        Sleep(wait)
        ECP.waitForControllerToComeBackOnline()
    def Reset(self,wait = True,start = False):
        print("Resetting Controller")
        from elan import Configurator as C
        from elan import Open as O
        from elan import HlConfig
        from elan import ElanConnectPro as ECP
        if start == True:
            C.Start()
        try:
            C.basicinformation.Wait(seconds = 10)
        except:
            C.Start()
            C.basicinformation.Wait(seconds=10)
        C.basicinformation.RightClick()
        C.resettofactoryconfiguration.Click()
        HlConfig.PushButton.Click('OK')
        ECP.CloseAndClean()


        if wait == True:
            ECP.waitForControllerToComeBackOnline()

class Viewer_Class(PC_Class):
    def ThemeScroll(self):
        if self.themesabove.Exists():
            self.themesabove.Click(xoffset=480, yoffset=540)
            #raise ValueError("Need to fix xy on themesabove")
            #self.themesabove.Click(xoffset=591, yoffset=547)
        elif self.blackthemesabove.Exists():
            self.blackthemesabove.Click(xoffset=485, yoffset=530)
    def Start(self,name = Controller_Name,password = Password,waitseconds = 10,secondpage = False,quick = False):
        from elan import ElanConnectPro
        os.startfile(ElanConnectProExe)
        # optionsopened.png
        #ElanConnectPro.options.Wait()
        ElanConnectPro.whitebox.WaitVanish()
        sleep(1)
        if ElanConnectPro.optionsclosed.Exists():
            ElanConnectPro.PushButton.Click('Options')
        else:
            pass
        ElanConnectPro.Edit.SetText(0,name)
        ElanConnectPro.Edit.SetText(1,password)
        ElanConnectPro.PushButton.Click('Start Viewer')
        if quick == False:
            if secondpage == True:
                try:
                    self.shudder.Wait(seconds = 10)
                    self.shudder.Click()
                except Exception as e:
                    print(e)
                    self.settingswheel.Wait()
            elif secondpage == False:
                try:
                    self.settingswheel.Wait(seconds = 10)
                except Exception as e:
                    print(e)
                    self.shudder.Wait(seconds=10)
                    self.shudder.Click()
            if self.setpasswordsforallaccounts.Exists() == True:
                    self.SetUpPin()
        else:
            print("Quick Mode Enabled")






    def GoToSettings(self):
        if self.shudder.Exists():
            self.shudder.Click()
            self.settingswheel.Wait()
            Sleep(2)
            self.settingswheel.Click()
        self.settingswheel.Click()
        self.EnterConfigPin()
        self.changesettingspassword.Wait()

    def EnterConfigPin(self):
        self.one.Wait()
        self.one.Click()
        self.two.Click()
        self.three.Click()
        self.four.Click()
        Sleep(2)

    def SetUpPin(self):
        from elan import Viewer
        Sleep(1)
        Viewer.setpasswordsforallaccounts.Click()
        Viewer.enternewpassword.Wait()
        Viewer.cursorpassword.RealClick()
        for i in Password:
            Viewer.Type(i)
        Viewer.Press('enter')
        Viewer.confirmnewpassword.Wait()
        for i in Password:
            Viewer.Type(i)
        Viewer.Press('enter')
        self.setpasswordsforallaccounts.WaitVanish()
        try:
            self.shudder.Click()
        except Exception as e:
            pass


    def CloseAndClean(self):
        from elan import ElanHomeSystemsConnect
        Sleep(2)
        from elan import ElanConnectPro
        self.Close()
        ElanConnectPro.Close()
        Sleep(5)
        try:
            ElanHomeSystemsConnect.Close()
        except Exception as e:
            print(e)


    '''
    def waitForControllerToComeBackOnline(self):
        from elan import ElanConnectPro
        ElanConnectPro.waitForControllerToComeBackOnline()
    def RestartHard(self):
        # Say("Hard Restarting Configurator")
        from elan import Configurator as C
        from elan import Open as O
        from elan import HlConfig
        from elan import ElanConnectPro as ECP
        C.basicinformation.RightClick()
        C.reboottargetsystemhardware.Click()
        HlConfig.PushButton.Click('Yes')
        ECP.CloseAndClean()
        ECP.waitForControllerToComeBackOnline()
    def Reset(self):
        # Say("Hard Restarting Configurator")
        from elan import Configurator as C
        from elan import Open as O
        from elan import HlConfig
        from elan import ElanConnectPro as ECP
        C.basicinformation.RightClick()
        C.resettofactoryconfiguration.Click()
        HlConfig.PushButton.Click('OK')
        ECP.CloseAndClean()
        ECP.waitForControllerToComeBackOnline()
    '''



class ElanConnectPro_Class(PC_Class):
    def Start(self):
        os.startfile(ElanConnectProExe)
        Sleep(5)

    def waitForControllerToComeBackOnline(self,seconds = 1000):
        from elan import ElanHomeSystemsConnect
        print('Waiting for Controller to come back online.')
        Sleep(4)
        try:
            ElanHomeSystemsConnect.Close()
        except Exception as e:
            print(e)
        for i in range(seconds):
            link = 'http://' + IP
            try:
                f = urlopen(link)
                print(f)
                myfile = str(f.read())
                print(myfile)
                if 'ELAN_Logo.png' in myfile:
                    print('Controller is online!')
                    break
                else:
                    print('Controller is not online yet, trying again..',i,' / ',seconds)
            except IOError:
                print('Controller is not online yet, trying again..',i,' / ',seconds)
        print('Controller is Ready!')


    def waitForControllerToComeBackOnlineOld(self,seconds = 1000):
        from urllib.request import urlopen
        Sleep(10)
        print('Waiting for Controller to come back online.')
        for i in range(seconds):
            link = 'http://' + IP
            try:
                f = urlopen(link)
                print(f)
                myfile = str(f.read())
                print(myfile)
                if 'ELAN_Logo.png' in myfile:
                    print('Controller is online!')
                    Sleep(15)
                    break
                else:
                    print('Controller is not online yet, trying again..',i,' / ',seconds)
            except IOError:
                print('Controller is not online yet, trying again..',i,' / ',seconds)
        print('Controller is Ready!')












    def CloseAndClean(self):
        self.Close()

    def StartConfigurator(self):
        os.startfile(ElanConnectProExe)
        Sleep(5)
        self.PushButton.Click('Options')
        self.Edit.SetText(0,Controller_Name)
        self.Edit.SetText(1,Password)
        self.PushButton.Click('Start Configurator')



if __name__ == "__main__":
    pass
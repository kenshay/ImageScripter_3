import pickle
from paths import Dictionary_Database_Folder,Active_Build_without_EXE
import os

print('########## ACTIVE BUILD IS ########################### -->',Active_Build_without_EXE)

def Remove_Script_From_Databases(SCRIPT_NAME_OR_INDEX):
        LIST_OF_REMOVED = []
        os.chdir(Dictionary_Database_Folder)
        for database_location_file in os.listdir(Dictionary_Database_Folder):
                if Active_Build_without_EXE in database_location_file:
                        print('Checking Database -> ',Active_Build_without_EXE,'  ',database_location_file)
                        with open(database_location_file, 'rb') as json_file:
                                List_Of_Dict = pickle.load(json_file)
                                #List_Of_Dict.append(Info_Dictionary)
                        for Dict in List_Of_Dict:
                                if type(SCRIPT_NAME_OR_INDEX) == str:
                                        SCRIPT_NAME = SCRIPT_NAME_OR_INDEX
                                        script_name = Dict['script_name'].split(':')[1]
                                        if script_name == SCRIPT_NAME:
                                                print('#####################\n')
                                                print('Removing -> ',Active_Build_without_EXE,'  ',script_name)
                                                List_Of_Dict.remove(Dict)
                                                LIST_OF_REMOVED.append(SCRIPT_NAME)
                                                print('Removed -> ',Active_Build_without_EXE,'  ',script_name)
                                                print('#####################\n')
                                        else:
                                            #pass
                                            print('Not Removing -> ',Active_Build_without_EXE,'  ',script_name)
                                else:
                                        INDEX = SCRIPT_NAME_OR_INDEX
                                        index_from_dict = Dict['index_time']
                                        SCRIPT_NAME = Dict['script_name'].split(':')[1]
                                        if INDEX == index_from_dict:
                                                SCRIPT_NAME = SCRIPT_NAME + ' ' + str(INDEX)
                                                print('#####################\n')
                                                print('Wile Remove -> ',Active_Build_without_EXE,'  ',SCRIPT_NAME)
                                                List_Of_Dict.remove(Dict)

                                                LIST_OF_REMOVED.append(SCRIPT_NAME)
                                                print('Removed -> ',Active_Build_without_EXE,'  ',SCRIPT_NAME)
                                                print('#####################\n')
                                                break
                                        else:
                                            #pass
                                            print('Not Removing -> ',Active_Build_without_EXE,'  ',SCRIPT_NAME)


                        with open(database_location_file, 'wb') as json_file:
                                pickle.dump(List_Of_Dict, json_file)
                else:
                        print('Skipping Database -> ',database_location_file," It is not -> ",Active_Build_without_EXE)
        if LIST_OF_REMOVED != []:
                for i in LIST_OF_REMOVED:
                        print('#################')
                        print('REMOVED -> ',i)
                        print('#################')
        else:
                print('#################')
                print('NOTHING REMOVED')
                print('#################')



def Mark_at_looked_at(INDEX):
        os.chdir(Dictionary_Database_Folder)
        for database_location_file in os.listdir(Dictionary_Database_Folder):
                if Active_Build_without_EXE in database_location_file:
                        print('Checking Database -> ',Active_Build_without_EXE,'  ',database_location_file)
                        with open(database_location_file, 'rb') as json_file:
                                List_Of_Dict = pickle.load(json_file)
                                #List_Of_Dict.append(Info_Dictionary)
                        for Dict in List_Of_Dict:
                                index_from_dict = Dict['index_time']
                                SCRIPT_NAME = Dict['script_name'].split(':')[1]
                                if INDEX == index_from_dict:
                                        #List_Of_Dict.remove(Dict)
                                        print('Found -> ',INDEX)
                                        Dict['looked_at'] = 'looked_at:True'
                                        #List_Of_Dict.append(Dict)

                                        break
                        with open(database_location_file, 'wb') as json_file:
                                pickle.dump(List_Of_Dict, json_file)













if __name__ == "__main__":
        #SCRIPT_NAME_Or_INDEX = 1591298546.8346283
        #SCRIPT_NAME_Or_INDEX = 1592414348.3411667
        #Mark_at_looked_at(1592416524.2030854)

        Remove_Script_From_Databases('0_Detect_Controller_Crashes')
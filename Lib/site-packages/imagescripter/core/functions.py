import os, shutil
import pyautogui
import win32gui
import win32con
from time import sleep


def get_data_from_file(x):
    with open(x, 'r') as f:
        data = f.readline()
    ###For Bool
    if data == "True":
        return True
    elif data == "False":
        return False
    else:
        return data

def Press(stringToPress):
    print("Pressing -> ", stringToPress)
    pyautogui.press(stringToPress)
    print("Pressed -> ", stringToPress)




def getListOfAllApplications():
    print('Getting a list of all opened applications')
    list = []
    def enumHandler(hwnd, lParam):
        if win32gui.IsWindowVisible(hwnd):
            list.append(hwnd)
            #list.append(win32gui.GetWindowText(hwnd))
    win32gui.EnumWindows(enumHandler, None)
    list = [x for x in list if x]
    return list

def closeAllApplicationsNotInList(Last_List):
    print('Closing All Applications Not In List')
    for i in range(10):
        sleep(.10)
        New_List = getListOfAllApplications()
        for handle in New_List:
            if handle not in Last_List:
                win32gui.PostMessage(handle, win32con.WM_CLOSE, 0, 0)
    print('Finished Closing All Applications Not In List')









def rename_all_files_in_folder():
    import os
    #os.chdir(r"C:\Users\Automation3\Desktop\Project_Elan\Applications_And_Devices\Configurator")
    # os.rename('guru99.txt','career.guru99.txt')
    for file in os.listdir():
        if file.endswith('.png'):
            old_name = file
            new_name = old_name.split('_')[1]
            print(new_name)
            os.rename(file, new_name)

def Clear_Directory_Contents(Directory_Path):
    print("Clearing Directory Contents -> ", Directory_Path)
    try:
        for the_file in os.listdir(Directory_Path):
            file_path = os.path.join(Directory_Path, the_file)
            try:
                if os.path.isfile(file_path):
                    os.unlink(file_path)
                    print('Removed -> ', file_path)
            except Exception as e:
                print(e)
    except FileNotFoundError:
        os.makedirs(Directory_Path)
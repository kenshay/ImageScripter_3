
from PyQt5 import QtGui,uic,QtCore
from win32api import GetSystemMetrics
import sys
from PyQt5.QtWidgets import QApplication, QWidget, QInputDialog, QLineEdit, QFileDialog


Main_Image_File = r"C:\Settings\Last_Templet_Image.png"
Target_Image_File = r"C:\Settings\Last_Target_Image.png"


class Image_Show_Class(QWidget):
    def __init__(self):
        QWidget.__init__(self)
        paths = [Main_Image_File]
        self.fs_watcher = QtCore.QFileSystemWatcher(paths)
        self.fs_watcher.fileChanged.connect(self.File_Changed)
        self.ui = uic.loadUi(r"C:\ImageScripter_2\Lib\site-packages\imagescripter\core\show_image.ui")
        self.ui.setWindowTitle('Show Image')
        self.load_image()
        self.ui.showMaximized()

    def load_image(self):
        ######
        Width = GetSystemMetrics(0)
        Height = GetSystemMetrics(1)
        Pixmap = QtGui.QPixmap(Main_Image_File)
        Pixmap = Pixmap.scaled(Width,Height,QtCore.Qt.KeepAspectRatio)
        self.ui.label.setPixmap(Pixmap)
        self.ui.label.resize(Pixmap.width(), Pixmap.height())
        ########
        Pixmap2 = QtGui.QPixmap(Target_Image_File)
        Pixmap2 = Pixmap2.scaled(200, 100, QtCore.Qt.KeepAspectRatio)
        self.ui.label_2.setPixmap(Pixmap2)
        self.ui.label_2.resize(Pixmap2.width(), Pixmap2.height() - Pixmap.height())
        try:
            with open(r"C:\Settings\Current_Running_Script.txt",'r') as f:
                txt = f.read()
            self.ui.label_6.setText(txt)
        except:
            self.ui.label_6.setText('')
        try:
            with open(r"C:\Settings\Current_Action.txt",'r') as f:
                txt = f.read()
            self.ui.label_5.setText(txt + '... ')
        except:
            self.ui.label_5.setText('')
        try:
            with open(r"C:\Settings\Current_Thresh_Match.txt",'r') as f:
                txt = f.read()
            List = txt.split('.')
            PercentLong = List[1]
            txt = PercentLong[:2]
            print(txt)





            if txt != '':
                self.ui.label_3.setText(txt + ' % MATCH')
            else:
                self.ui.label_3.setText('')
        except Exception as e:
            print(e)
            self.ui.label_3.setText('')










    def File_Changed(self):
        self.load_image()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    screen = app.primaryScreen()
    size = screen.size()
    ex = Image_Show_Class()
    sys.exit(app.exec_())
import os
import subprocess
from datetime import datetime
import subprocess
import time
from imagescripter.core.variable_file_getter import Variable_File_Getter

class Screen_Recorder_Class():
    recording_directory = Variable_File_Getter.getVariableFromFile('Recordings_Location')
    def getTime(self):
        now = datetime.now()
        return now.strftime("%c")
        #return now.strftime('%I:%M:%S')
    def create_recording_director_if_not_exitst(self):
        if not os.path.exists(self.recording_directory):
            os.makedirs(self.recording_directory)

    def delete_past_video(self,name):
        try:
            os.remove(name)
        except Exception as e:
            print(e)



    def record(self,script_name = 'default'):
        print("Recording")
        self.create_recording_director_if_not_exitst()
        curdir = os.getcwd()
        os.chdir(r"C:\ImageScripter_2\Lib\site-packages\imagescripter\exe")
        unique_time_string = '_' + str(time.time())
        self.File_name_without_avi = self.recording_directory + '\\' + script_name + unique_time_string
        self.File_name_with_avi = self.File_name_without_avi + ".avi"
        #self.delete_past_video(self.File_name)
        self.video_proc = subprocess.Popen(['ffmpeg', '-f','gdigrab', '-framerate','60', '-i','desktop', self.File_name_with_avi,'-b', '1'])
        os.chdir(curdir)


    def stop(self,PassOrFail):
        print("Stop Recording")
        self.video_proc.terminate()
        new_file_name = self.File_name_without_avi + '__' + PassOrFail + '__' + '.avi'
        for i in range(10):
            try:
                os.rename(self.File_name_with_avi, new_file_name)
                break
            except PermissionError:
                time.sleep(1)
                if i >= 9:
                    raise




if __name__ == "__main__":
    hd_camera = Screen_Recorder_Class()
    hd_camera.record()
    time.sleep(10)
    hd_camera.stop()


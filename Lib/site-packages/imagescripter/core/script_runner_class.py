import os
import sys
from importlib import reload
import re
from elan.elan_script import Elan_Script_Class
from imagescripter.core.database_manager import Database_Manager_Class
from imagescripter.core.variable_file_getter import Variable_File_Getter

Script_Folder = Variable_File_Getter.getVariableFromFile('Active_Script_Folder')
#database_location = Variable_File_Getter.getVariableFromFile('Database_Location')

def natural_keys(text):
    return [atoi(c) for c in re.split('(\d+)', text)]

def atoi(text):
    return int(text) if text.isdigit() else text

class Script_Runner_Class():
    def __init__(self,script_folder):
        self.script_folder = script_folder
        self.add_to_be_able_to_be_imported()
        #self.init_database_manager()
    def init_database_manager(self):
        pass
        #print("Initing Database Manger")
        #self.Database_Manager = Database_Manager_Class(database_location)
    def add_to_be_able_to_be_imported(self):
        sys.path.append(self.script_folder)
    def get_list_of_scripts(self):
        os.chdir(self.script_folder)
        List = os.listdir(self.script_folder)
        #print(List)
        List_of_scripts = []
        List.sort(key=natural_keys)
        for i in List:
            if i.endswith('.py'):
                print(i)
                script_location = os.path.abspath(i)
                script_object = Elan_Script_Class(script_location)
                List_of_scripts.append(script_object)
        return List_of_scripts
    def init_run_scripts_while_loop(self):
                try:
                    for script in self.get_list_of_scripts():
                        script.run()
                        #self.Database_Manager.enter_test_results_into_database()
                    while True:
                        for script in self.get_list_of_scripts():
                            script.re_run()
                            #self.Database_Manager.enter_test_results_into_database()
                except Exception as e:
                    print("Exception 45")
                    print(e)
                    #self.Database_Manager.enter_test_results_into_database()
                    raise

if __name__ == "__main__":
    from imagescripter.core.functions import Clear_Directory_Contents
    Clear_Directory_Contents(Variable_File_Getter.getVariableFromFile('Recordings_Location'))
    while True:
        try:
            Script_Runner = Script_Runner_Class(Script_Folder)

            Script_Runner.init_run_scripts_while_loop()
        except Exception as e:
            print("Exception 55")
            raise

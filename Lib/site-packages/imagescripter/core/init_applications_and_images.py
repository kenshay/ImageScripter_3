from paths import *
import os
from imagescripter import *
from imagescripter.core.functions import get_data_from_file,Press,Start_Image_Show,Close_Image_Show,Type,KeyDown,KeyUp,Ping
from imagescripter.core.image import Image_Class
from imagescripter.core.automation_functions import *
import pickle
import re

text = 'from $$$.functions import *'
text = text.replace('$$$',The_NAME)
exec(text)
text = 'from $$$.Custom_Applications import *'
text = text.replace('$$$',The_NAME)
exec(text)
Pickle_application_Object_File_Location = ImageScripter_Location + r"Lib\site-packages\imagescripter\data\deviceApplicationObject"
Devices_Folder_Location = PROJECT + r"\Applications_And_Devices"
List_of_Devices = os.listdir(Devices_Folder_Location)
List_of_commands = []
List_of_Devices = [x for x in List_of_Devices if x != '.png']
for app_string_name in List_of_Devices:
    try:
        Folder_Name = Devices_Folder_Location + '\\' + app_string_name
        if os.path.isfile(Folder_Name):
            os.remove(Folder_Name)
        else:
            os.chdir(Folder_Name)
            class_name = get_data_from_file("class_name.txt")
            ip_address = get_data_from_file("ip_address.txt")
            list_of_tags = get_data_from_file("list_of_tags.txt")
            password = get_data_from_file("password.txt")
            port = get_data_from_file("port.txt")
            user_name = get_data_from_file("user_name.txt")
            command = '#app_name# = #class_name#(#list_of_tags#,"#ip_address#","#port#","#user_name#","#password#")'
            command = command.replace('#app_name#', app_string_name)
            command = command.replace('#class_name#', class_name)
            command = command.replace('#list_of_tags#', list_of_tags)
            command = command.replace('#ip_address#', ip_address)
            command = command.replace('#port#', port)
            command = command.replace('#user_name#', user_name)
            command = command.replace('#password#', password)
            exec(command)
            List_of_commands.append(command)
            deviceApplicationObject = eval(app_string_name)
            pickling_on = open(Pickle_application_Object_File_Location, "wb")
            pickle.dump(deviceApplicationObject, pickling_on)
            pickling_on.close()
            for image_name_with_png in os.listdir():
                if image_name_with_png.endswith('.png') or image_name_with_png.endswith('.PNG'):
                    if re.search('[A-Z]', image_name_with_png):
                        newname = image_name_with_png.lower()
                        print('Renaming -> ',image_name_with_png,' -> ',newname)
                        os.rename(image_name_with_png,newname)
                        image_name_with_png = newname
                    path_of_image = os.path.abspath(image_name_with_png)
                    image_name_string = image_name_with_png.replace('.png','')
                    if ',' in image_name_string:
                        List = image_name_string.split(',')
                        image_name_string = List[0]
                        threshold = List[1]
                    else:
                        pass
                    oldcommand = 'Interface.media = Image_Class(path_of_image, Interface, .96)'
                    command = '#app_name#.#image_name_string# = Image_Class(r"#path_of_image#",r"#deviceApplicationObjectPickleLocation#", .96)'
                    command = command.replace("#app_name#", app_string_name)
                    command = command.replace("#image_name_string#", image_name_string)
                    command = command.replace("#path_of_image#", path_of_image)
                    command = command.replace("#deviceApplicationObjectPickleLocation#", Pickle_application_Object_File_Location)
                    try:
                        exec(command)
                    except SyntaxError as e:
                        pass
    except Exception as e:
        raise
        os.chdir('..')
        #import shutil
        #shutil.rmtree(app_string_name)
        #os.remove('../' + app_string_name)
        print('Try Removing App -> ' + app_string_name,'Something is wrong with it')
        print(e)
from importlib import reload
from imagescripter.core.screen_recorder import Screen_Recorder_Class
import time
from threading import Thread
import os
import sys
from imagescripter.core.error_window import Error_Window_Self_Destruct_Class
from imagescripter.core.start_end_winow import Start_End_Window_Self_Destruct_Class

class Script_Class():
    def __init__(self,script_location):
        self.script_location = script_location
        #Add to sys.path or wont run on import
        if os.path.dirname(os.path.dirname(self.script_location)) not in sys.path:
            sys.path.append(os.path.dirname(self.script_location))
        self.file_name = os.path.basename(self.script_location)
        print(self.file_name)
        self.file_name_without_py = self.file_name.replace('.py', '')
        print(self.file_name_without_py)
        self.Screen_Recorder = Screen_Recorder_Class()
    def get_commands(self):
        with open(self.script_location) as f:
            commands = f.read()
        return commands
    def run(self):
        self.Screen_Recorder.record(self.file_name_without_py)
        try:
            Start_Window = Start_End_Window_Self_Destruct_Class()
            module = __import__(self.file_name_without_py)
            time.sleep(10)
            End_Window = Start_End_Window_Self_Destruct_Class()
            self.Screen_Recorder.stop('(PASS)')
        except Exception as e:
            print("Exception 29")
            #time.sleep(5)
            Error_Window = Error_Window_Self_Destruct_Class(str(e))
            self.Screen_Recorder.stop('(FAIL)')
            raise
    def re_run(self):
        self.Screen_Recorder.record(self.file_name_without_py)
        try:
            Start_Window = Start_End_Window_Self_Destruct_Class()
            module = __import__(self.file_name_without_py)
            reload(module)
            time.sleep(10)
            End_Window = Start_End_Window_Self_Destruct_Class()
            self.Screen_Recorder.stop('(PASS)')
        except Exception as e:
            #time.sleep(5)
            Error_Window = Error_Window_Self_Destruct_Class(str(e))
            self.Screen_Recorder.stop('(FAIL)')

            raise







            #os.system()
        #try:
        #    exec(self.get_commands())
        #except Exception as e:
        #    print(e)
        #    raise
        #    #return Exception


if __name__ == "__main__":
    #script_location = r"C:\Elan_Tools\ImageScripter\ProgramData\SystemFiles\Python\Lib\site-packages\elan\Pools\Frank\4_media.py"
    script_location = r"C:\ImageScripter_2\Lib\site-packages\elan\Scripts\FrankReal\0b_Full_Backup_Only_On_Saturday.py"
    script = Script_Class(script_location)
    script.run()
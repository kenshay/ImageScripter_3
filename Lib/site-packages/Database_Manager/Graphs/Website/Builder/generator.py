from yattag import Doc
from yattag import indent
import random
import os
from paramiko import SSHClient
import paramiko
import time
import traceback
from scp import SCPClient
from Database_Manager.Dictionary_Database_Manager import Dictionary_Database_Manager_Class
from paths import Dictionary_Database_Location, All_Scripts_Folder_Location, Active_Build, Graph_Folder_Location, \
    Active_Build_without_EXE

####################################################################
ssh_host = '172.105.150.15'
ssh_user = 'root'
ssh_password = 'M8wh11YhL'
ssh_port = '22'
graph = r"C:\xampp\htdocs\index.php"
Destination = r"/var/www/html/index.php"

def Sleep(sec):
    for i in range(sec):
        print(i,' ', sec)
        time.sleep(1)

def Upload_Graph_To_Server():
    try:

        ########################################################
        ssh = SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ssh_host, username=ssh_user, password=ssh_password, look_for_keys=False)

        with SCPClient(ssh.get_transport()) as scp:

            print('Uploading ', graph, 'To ', Destination)
            scp.put(graph, Destination)
            print('Finished Uploading ', graph)

        ssh.close()
        scp.close()
    except:
        traceback.print_exc()
        try:
            ssh.close()
        except:
            pass
        try:
            scp.close()
        except:
            pass





def MAINS_SCRIPT():
    Dictionary_Database_Manager = Dictionary_Database_Manager_Class(Dictionary_Database_Location)
    Stations_List = Dictionary_Database_Manager.get_all_station_names()
    Stations_List = set(Stations_List)
    Stations_List = list(Stations_List)

    ##################################################################
    ##################################################################
    doc, tag, text = Doc().tagtext()

    doc.asis('<!DOCTYPE HTML>')
    with tag('html', lang=" en"):
        with tag('head'):
            doc.asis('<!-- basic.html -->')
            doc.asis('<meta http-equiv="refresh" content="5">')


            with tag('title'):
                text('basic.html')
            doc.asis('<meta charset = "UTF-8" />')
            doc.asis('<link rel="stylesheet" href="style.css">')
        with tag('body'):
            with tag('h2'):
                Active_Build = Active_Build_without_EXE.replace('_', '.')
                Active_Build = "Build = " + Active_Build
                text(Active_Build)
            with tag('h2'):
                from datetime import datetime
                now = datetime.now()
                datest = now.strftime('%Y/%m/%d %I:%M:%S')
                text("Graph Last Updated = " + datest)






            with tag('div'):
                for Station_Name in sorted(Stations_List):
                    List_of_scripts_dicts = []
                    Max_Length_List = []
                    scripts_list = Dictionary_Database_Manager.get_all_scripts_from_station(Station_Name)
                    print('###################')
                    print(Station_Name)
                    print('###################')

                    for script_name in reversed(scripts_list):
                        print(script_name)

                        Pass_Fail_List_of_entries_for_script = Dictionary_Database_Manager.get_order_of_happened_scripts_passes_and_fails(
                            Station_Name, script_name)
                        Max_Length_List.append(len(Pass_Fail_List_of_entries_for_script))
                        script_dict = {}
                        script_dict['name'] = script_name
                        List = []
                        for entry in reversed(Pass_Fail_List_of_entries_for_script):
                            Result_Dict = {}
                            Result_Dict['pass'] = entry['pass'].split(':')[1]
                            fail_Video_Name = entry['fail_video'].split(':')[1]
                            fail_Video_Name = os.path.basename(fail_Video_Name)
                            fail_Video_Name_without_avi = fail_Video_Name.rstrip('.avi')
                            pass_Video_Name = entry['pass_video'].split(':')[1]
                            pass_Video_Name = os.path.basename(pass_Video_Name)
                            pass_Video_Name_without_avi = pass_Video_Name.rstrip('.avi')


                            Result_Dict['fail_Video_Name_without_avi'] = fail_Video_Name_without_avi
                            Result_Dict['pass_Video_Name_without_avi'] = pass_Video_Name_without_avi
                            List.append(Result_Dict)
                        script_dict['results'] = List
                        List_of_scripts_dicts.append(script_dict)
                    Amount_Of_Runs_Total = max(Max_Length_List)
                    with tag('table', id="title_table"):
                        with tag('tr'):
                            with tag('td', id="title_table_td"):
                                # astring = 'Build = $'
                                # astring = astring.replace('$',str(Active_Build))
                                # text(astring)
                                # text(' ')
                                text(Station_Name)
                    with tag('table', cellspacing="0", cellpadding="0"):
                        ###################################################################################
                        with tag('tr'):
                            with tag('td', id="td_script_name"):
                                pass
                            for interger in reversed(range(Amount_Of_Runs_Total)):
                                interger += 1
                                with tag('td', id="td_script_number"):
                                    text(str(interger))
                            #################################################################################

                            for script_dict in List_of_scripts_dicts:
                                name = script_dict['name']
                                Result_Dict_List = script_dict['results']
                                with tag('tr'):
                                    with tag('td', id="td_script_name"):
                                        text(name)
                                    for Result_Dict in Result_Dict_List:
                                        pass_or_fail = Result_Dict['pass']
                                        print(pass_or_fail)
                                        if pass_or_fail == 'True':
                                            pass_or_fail = 'tdpass'
                                        else:
                                            pass_or_fail = 'tdfail'
                                        fail_Video_Name_without_avi = Result_Dict['fail_Video_Name_without_avi']
                                        if fail_Video_Name_without_avi != 'None':
                                            linkwhole = "location.href='http://172.105.150.15/fails/" + fail_Video_Name_without_avi + "/fail.php'"
                                            print(linkwhole)
                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                pass
                                        else:
                                            linkwhole = "location.href='http://172.105.150.15/passes/" + pass_Video_Name_without_avi + "/pass.php'"
                                            #print(linkwhole)
                                            #print('#####################################')
                                            #print('LINK  - ---------> ',linkwhole)
git
                                            with tag('td', id=pass_or_fail, onclick=linkwhole):
                                                pass
                                    for blank in range(Amount_Of_Runs_Total - len(Result_Dict_List)):
                                        with tag('td', id='tdnotrun'):
                                            pass
                            ###################################################################################
                            with tag('tr'):
                                with tag('td', id="td_script_name"):
                                    pass
                                for interger in reversed(range(Amount_Of_Runs_Total)):
                                    interger += 1
                                    with tag('td', id="td_script_number"):
                                        text(str(interger))
                            #################################################################################
    return doc
while True:
    try:
        doc = MAINS_SCRIPT()
        result = indent(doc.getvalue())

        directory = os.path.dirname(os.path.abspath(graph))
        if not os.path.exists(directory):
            os.makedirs(directory)
        with open(graph, 'w+') as f:
            print(graph)
            f.write(result)

        Upload_Graph_To_Server()
        Sleep(60)
    except Exception as e:
        traceback.print_exc()



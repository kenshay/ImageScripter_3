

from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
import os
from paramiko import SSHClient
import smtplib
from paths import Graph_Folder_Location
from paths import Dictionary_Database_Location
from Database_Manager.Dictionary_Database_Manager import Dictionary_Database_Manager_Class
import time
from Database_Manager.Graphs import Google_Drive

##############################################################################Video

Dictionary_Database_Manager = Dictionary_Database_Manager_Class(Dictionary_Database_Location)
List = Dictionary_Database_Manager.get_all_fail_videos()
os.chdir(r"C:\Eluminate\System\ImageScripter\Lib\site-packages\Database_Manager\Graphs")

def Prepare_Videos():
    old_video_names = Google_Drive.get_all_file_names()

    for fail_video_path in Dictionary_Database_Manager.get_all_fail_videos():
        File_Name = os.path.basename(fail_video_path)
        if File_Name not in old_video_names:
            print(File_Name,' Not in >', old_video_names)
            Mime = 'video/avi'
            try:
                Google_Drive.uploadFile(File_Name,fail_video_path,Mime)
                print('File Updated -> ',(File_Name))
            except Exception as e:
                print('Failed Updated Skipping -> ',(File_Name))
        else:
            print('Passing -> ',File_Name)

#Prepare_Videos()
#Google_Drive.update_permission_for_all_files()
'''
Paths =  Google_Drive.Get_All_Share_Links()
String_Of_Paths = ''
for link in Paths:
    Link = '<a href="$LINK$">$NAME$</a>'
    Link = Link.replace('$LINK$',link['link'])
    Link = Link.replace('$NAME$',link['name'])
    String_Of_Paths = String_Of_Paths + Link  + '<br>'
'''

#############################################################################EMAIL
strFrom = 'ElanTesterTools@gmail.com'















recipients = ["kennyshay123@gmail.com",
          "elantestertools@gmail.com",
          "ken.shay@nortekcontrol.com"]



recipients = ["kennyshay123@gmail.com",
          "Ben.Bickell@nortekcontrol.com",
          "elantestertools@gmail.com",
          "ken.shay@nortekcontrol.com"]

recipients = ["kennyshay123@gmail.com",
          "elantestertools@gmail.com",
          "ken.shay@nortekcontrol.com"]


msgRoot = MIMEMultipart('related')
msgRoot['Subject'] = 'Daily Graph Automated Message'
msgRoot['From'] = strFrom
msgRoot['To'] = strFrom
msgRoot.preamble = 'This is a multi-part message in MIME format.'

msgAlternative = MIMEMultipart('alternative')
msgRoot.attach(msgAlternative)


os.chdir(Graph_Folder_Location)
List_Of_Graphs_Without_Png = []
for graph_image in os.listdir(Graph_Folder_Location):
    if graph_image.endswith('.png'):
        graph_image_without_png = graph_image.strip('.png')
        List_Of_Graphs_Without_Png.append(graph_image_without_png)
        fp = open(graph_image, 'rb')
        msgImage = MIMEImage(fp.read())
        fp.close()
        msgImage.add_header('Content-ID', '<' + graph_image_without_png + '>')
        msgRoot.attach(msgImage)
Text = '<h2><a href="172.105.150.15/">Info</a></h2>'


for graph_html in os.listdir(Graph_Folder_Location):
    with open(graph_html,'r') as f:
        html_code = f.read()

    html_code = html_code + '<br>'


    #peice = '<img src="cid:$$$"><br>'
    #peice = peice.replace('$$$', graph)
    Text = Text + html_code

#msgRoot.attach(MIMEText(String_Of_Paths, 'html'))

msgText = MIMEText(Text, 'html')
msgAlternative.attach(msgText)
smtp = smtplib.SMTP()
gmail_user = "ElanTesterTools@gmail.com"
gmail_password = "M8wh11YhL"
gmail_user = "kennyshay123@gmail.com"
gmail_password = "Mermaid123"
server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
server.ehlo()
server.login(gmail_user, gmail_password)
server.sendmail(strFrom,recipients,msgRoot.as_string())
server.close()
print('Done')
##############################################################################################

import traceback
import paramiko
from scp import SCPClient
ssh_host = '172.105.150.15'
ssh_user = 'root'
ssh_password = 'M8wh11YhL'
ssh_port = '22'
Server_Graph_Folder_Location = r"/var/www/html/current_graphs/"
def Upload_Graphs():
    try:
        Last_dir = os.getcwd()
        os.chdir(Graph_Folder_Location)
        List_of_Graphs = os.listdir(Graph_Folder_Location)
        ########################################################
        ssh = SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ssh_host, username=ssh_user, password=ssh_password, look_for_keys=False)

        with SCPClient(ssh.get_transport()) as scp:
            for graph in List_of_Graphs:

                NewFile = Server_Graph_Folder_Location + graph
                print('Uploading ', graph, 'To ',NewFile)
                scp.put(graph,NewFile)
                print('Finished Uploading ', graph)

        ssh.close()
        scp.close()
    except:
        traceback.print_exc()
        try:
            ssh.close()
        except:
            pass
        try:
            scp.close()
        except:
            pass
Upload_Graphs()
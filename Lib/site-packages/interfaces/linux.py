
from interfaces.device import Device_Class
import paramiko
from scp import SCPClient
from PIL import Image
from paths import *
##screenshot_file = r"C:\ImageScripter_2\TEMP\Linux_Screenshot.png"


class Linux_Class(Device_Class):
    def _click_(self, x, y):
        print("_click_")
        nbytes = 4096
        #command = "python3 Desktop/click.py #X #Y"
        #command = "DISPLAY =:0 xdotool mousemove 100 100 click 1"
        #command = "DISPLAY =:0 xdotool mousemove #X #Y click 1"
        command = "DISPLAY=:0 xdotool mousemove #X #Y click 1"
        command = command.replace('#X', str(x))
        command = command.replace('#Y', str(y))


        def createSSHClient():
            client = paramiko.SSHClient()
            client.load_system_host_keys()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(self._ipadress_, self._port_, self._username_, self._password_)
            return client

        client = paramiko.Transport((self._ipadress_, self._port_))
        client.connect(username=self._username_, password=self._password_)
        stdout_data = []
        stderr_data = []
        session = client.open_channel(kind='session')
        session.exec_command(command)
        while True:
            if session.recv_ready():
                stdout_data.append(session.recv(nbytes))
                print(stdout_data)
            if session.recv_stderr_ready():
                stderr_data.append(session.recv_stderr(nbytes))
                print(stderr_data)
            if session.exit_status_ready():
                break
        session.close()
        client.close()
        print("_click_")
    def _get_image_of_screen_(self,attempts = 100):
        def createSSHClient():
            client = paramiko.SSHClient()
            client.load_system_host_keys()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(self._ipadress_, self._port_, self._username_, self._password_)
            return client
        for atime in range(attempts): #Should run only once, unless failure
            try:
                nbytes = 4096
                command = 'DISPLAY=:0 scrot /tmp/test.png'
                client = paramiko.Transport((self._ipadress_, self._port_))
                client.connect(username=self._username_, password=self._password_)
                stdout_data = []
                stderr_data = []
                session = client.open_channel(kind='session')
                session.exec_command(command)
                while True:
                    if session.recv_ready():
                        print(session.recv(nbytes))
                        stdout_data.append(session.recv(nbytes))
                    if session.recv_stderr_ready():
                        print(session.recv_stderr(nbytes))
                        stderr_data.append(session.recv_stderr(nbytes))
                    if session.exit_status_ready():
                        break
                #print 'exit status: ', session.recv_exit_status()
                #print ''.join(stdout_data)
                #print ''.join(stderr_data)
                session.close()
                client.close()
                ssh = createSSHClient()
                scp = SCPClient(ssh.get_transport())
                scp.get('/tmp/test.png',screenshot_file_itp8)
                break
            except PermissionError as e:
                print(e)
        return screenshot_file_itp8


if __name__ == "__main__":
    Interface = Linux_Class(ip_address='192.168.0.118', port=22, user_name='god', password='god')
    actual_img_path = Interface._get_image_of_screen_()
    target_img_path = r"C:\ImageScripter_3\TEMP\Linux_Pics\1.PNG"
    x, y = Interface._get_location_of_image_in_image(target_img_path, actual_img_path)
    print(x,y)
    Interface._click_(x, y)
    Interface._click_(300, 300)



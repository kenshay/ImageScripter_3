from paths import *
from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QApplication, QWidget, QInputDialog, QLineEdit, QFileDialog
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox
from PyQt5 import QtGui, uic, Qt
from PyQt5.QtGui import QStandardItemModel,QStandardItem
from paths import *
from PyQt5.QtGui import QIcon, QPixmap
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from paths import *
import PyQt5
from PyQt5 import QtCore
import subprocess
import time
import os


class Hub_Class(QWidget):
    def __init__(self):
        super().__init__()
        self.ui = uic.loadUi(Hub_Ui)
        self.ui.showMaximized()
        self.ui.pushButton_3.clicked.connect(self.script_writer_clicked)
        self.ui.pushButton_2.clicked.connect(self.database_viewer_clicked)
        self.ui.pushButton_3.clicked.connect(self.script_runner_clicked)

    def script_writer_clicked(self):
        path = Python_Exe_Location + ' ' + ImageScripter_Location + "Lib\site-packages\Script_Writer\script_writer.py"
        proc = subprocess.Popen(path, shell=True)


    def database_viewer_clicked(self):
        path = Python_Exe_Location + ' ' + ImageScripter_Location + "Lib\site-packages\database_viewer\database_viewer.py"
        proc = subprocess.Popen(path, shell=True)

    def script_runner_clicked(self):
        path = Python_Exe_Location + ' ' + ImageScripter_Location + "Lib\site-packages\Script_Writer\script_writer.py"
        proc = subprocess.Popen(path, shell=True)


if __name__ == '__main__':
    try:
        app = QApplication(sys.argv)
        Hub = Hub_Class()
        sys.exit(app.exec_())
    except Exception as e:
        raise
        e = str(e)
        import ctypes
        ctypes.windll.user32.MessageBoxW(0, e, 'Error', 0)

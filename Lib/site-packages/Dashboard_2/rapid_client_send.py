
import time
import multiprocessing
import random
import pyautogui
import matplotlib.pyplot as plt



def worker():
    import socket
    from paths import Dashboard_Server_IP,Dashboard_Server_PORT
    import traceback
    import pickle
    import os
    path = 'C:\Eluminate\Projects\_elan_\elan\Applications_And_Devices\Configurator'
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
        print('Connecting to Server, ',Dashboard_Server_IP)
        print('Connecting to Port, ',Dashboard_Server_PORT)
        server.connect((Dashboard_Server_IP, Dashboard_Server_PORT))
        print('Connected to Server')
        os.chdir(path)
        List = os.listdir()
        while True:
            image = pyautogui.screenshot()
            imag_path = r"C:\Eluminate\System\ImageScripter\Lib\site-packages\Dashboard_2\desktop.png"
            image.save(imag_path)
            with open(imag_path, 'rb') as f:
                desktop_picture = f.read()




            img = random.choice(List)
            with open(img, 'rb') as f:
                template = f.read()



            img = random.choice(List)
            with open(img, 'rb') as f:
                target = f.read()

            aList = []
            aList.append(('controller_name', 'Frank2'))
            aList.append(('station_name', 'Smoke_Station'))
            aList.append(('script_name', '1_Add_Camera'))
            aList.append(('template', template))
            aList.append(('desktop_picture', desktop_picture))
            aList.append(('target', target))
            aList.append(('controller_build', '8.4.81.156'))
            aList.append(('controller_ip', '192.168.0.11'))
            aList.append(('cpu_usage', '77%'))
            aList.append(('memory_free', '3.8%'))
            aList.append(('memory_used', '65.2%'))
            aList.append(('drive_space_used', '78.2%'))
            aList.append(('ssh_connections', '11'))
            aList.append(('cycle', '8'))
            aList.append(('time', '10:58:11 AM'))
            aList.append(('date', '2/21/2020'))
            Info_Dictionary = dict(aList)






            Info_Dictionary_Pickled = pickle.dumps(Info_Dictionary)
            server.sendall(Info_Dictionary_Pickled)
            time.sleep(random.choice(range(1,10)))
if __name__ == '__main__':
    jobs = []
    for i in range(4):
        p = multiprocessing.Process(target=worker)
        jobs.append(p)
        p.start()
        time.sleep(random.choice(range(1,10)))
try:
    import os
    import ctypes
    import shutil, errno
    import stat
    import time
    import sys
    from distutils.dir_util import copy_tree
    print("Starting")

    def copyanything(src, dst):
        try:
            shutil.copytree(src, dst)
        except OSError as exc: # python >2.5
            if exc.errno == errno.ENOTDIR:
                shutil.copy(src, dst)
            else: raise
    def errorRemoveReadonly(func, path, exc):
        excvalue = exc[1]
        if func in (os.rmdir, os.remove) and excvalue.errno == errno.EACCES:
            # change the file to be readable,writable,executable: 0777
            os.chmod(path, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)
            # retry
            func(path)
        else:
            shutil.rmtree(path)
            print('raiseenter code here')
    def Mbox(title, text, style):
        return ctypes.windll.user32.MessageBoxW(0, text, title, style)

    def elevate():
        import ctypes, win32com.shell.shell, win32event, win32process
        outpath = r'%s\%s.out' % (os.environ["TEMP"], os.path.basename(__file__))
        if ctypes.windll.shell32.IsUserAnAdmin():
            if os.path.isfile(outpath):
                sys.stderr = sys.stdout = open(outpath, 'w', 0)
            return
        with open(outpath, 'w+', 0) as outfile:
            hProc = win32com.shell.shell.ShellExecuteEx(lpFile=sys.executable, \
                lpVerb='runas', lpParameters=' '.join(sys.argv), fMask=64, nShow=0)['hProcess']
            while True:
                hr = win32event.WaitForSingleObject(hProc, 40)
                while True:
                    line = outfile.readline()
                    if not line: break
                    sys.stdout.write(line)
                if hr != 0x102: break
        os.remove(outpath)
        sys.stderr = ''
        sys.exit(win32process.GetExitCodeProcess(hProc))


    elevate()


    Path = r"C:\ImageScripter_2\Lib\site-packages\Script_Writer\rsync"
    print("Change Path To -> ",Path)
    os.chdir(Path)
    Differences_Folder = r"C:\ImageScripter_2\Lib\site-packages\Script_Writer\rsync\difference"
    try:
        shutil.rmtree(Differences_Folder, ignore_errors=False, onerror=errorRemoveReadonly)
        # os.system('rmdir /S /Q "{}"'.format('difference'))
        # rmtree('difference')
        print('Removed /DIFF')
    except Exception as e:
        print(str(e))
        pass
    Desktop = os.path.join(os.environ["HOMEPATH"], "Desktop")
    print('########')
    Desktop = Desktop.replace('\\','/')
    Desktop = ' /cygdrive/c' + Desktop + '/' + 'difference/'
    print(Desktop)

    print('/cygdrive/c/Settings/elan/')
    print('########')
    #os.system("rsync  -rvcm --no-p --no-g --no-o --compare-dest=/cygdrive/c/Settings/elan/ /cygdrive/c/ImageScripter_2/Lib/site-packages/elan/ difference/")
    os.system("rsync  -rvcm --no-p --chmod=ugo=rwX --no-g --no-o --compare-dest=/cygdrive/c/Settings/elan/ /cygdrive/c/ImageScripter_2/Lib/site-packages/elan/ difference/")

    os.chdir(Desktop)
    timeString = str(time.time())
    End_folder = 'Smart_Export_' + timeString
    print('Copy To Desktop -> ',End_folder)
    copyanything(Differences_Folder,End_folder)
    print("Doing Cleanup")
    shutil.rmtree(Differences_Folder, ignore_errors=False, onerror=errorRemoveReadonly)
    print('Removed /DIFF')
    print("Finished Cleanup")
    input("Finished Exporting",Desktop + '\\' + End_folder)
    #Mbox('Notice', 'Finished', 1)
except Exception as e:
    print(e)
    raise
    input('Error')
